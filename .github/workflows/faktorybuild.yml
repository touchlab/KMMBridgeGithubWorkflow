name: KMM Bridge Github Workflow
on:
  workflow_call:
    inputs:
      module:
        description: The module name to run the task on if you have mutliple kmp modules
        required: false
        type: string
      publishTask:
        description: 'The publish task to call if not kmmBridgePublish'
        default: 'kmmBridgePublish'
        required: false
        type: string
      netrcMachine:
        description: 'Netrc machine param'
        default: 'maven.pkg.github.com'
        required: false
        type: string
      jvmVersion:
        description: 'JVM Version to use. Will be passed to java-version parameter of setup-java'
        default: '11'
        required: false
        type: string
      runsOn:
        description: 'Host parameter to pass to runs-on'
        default: 'macos-12'
        required: false
        type: string
    secrets:
      gradle_params:
        required: false
      PODSPEC_SSH_KEY:
        required: false
      netrcUsername:
        description: 'Netrc username param'
        required: false
      netrcPassword:
        description: 'Netrc password param'
        required: false

env:
  PODSPEC_SSH_KEY_EXISTS: ${{ secrets.PODSPEC_SSH_KEY != ''}}
  MODULE: ${{ inputs.module != '' && format('{0}:',inputs.module) || '' }}


jobs:
  kmmbridgepublish:
    concurrency: "kmmbridgepublish-${{ github.repository }}"
    runs-on: ${{ inputs.runsOn }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Apply SSH Key
        if: ${{ env.PODSPEC_SSH_KEY_EXISTS == 'true' }}
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PODSPEC_SSH_KEY }}

      - uses: extractions/netrc@v1
        with:
          machine: ${{ inputs.netrcMachine }}
          username: ${{ secrets.netrcUsername != '' && secrets.netrcUsername || 'cirunner' }}
          password: ${{ secrets.netrcPassword != '' && secrets.netrcPassword || secrets.GITHUB_TOKEN  }}

      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: ${{ inputs.jvmVersion }}

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache build tooling
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.konan
          key: ${{ runner.os }}-v4-${{ hashFiles('*.gradle.kts') }}

      - name: Build Main
        run: ./gradlew ${{ env.MODULE }}${{ inputs.publishTask }} -PENABLE_PUBLISHING=true -PGITHUB_PUBLISH_TOKEN=${{ secrets.GITHUB_TOKEN }} -PGITHUB_REPO=${{ github.repository }} ${{ secrets.gradle_params }} --no-daemon --stacktrace
        env:
          GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m"
